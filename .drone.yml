build:
    build_starting:
        image: python:2
        commands:
            - echo "Beginning new build"
    run_tests:
        image: python:2-alpine
        commands:
            - pip install -r requirements.txt
            - python testing.py

publish:
    docker:
        repo: $$DOCKER_USERNAME/cicd_demoapp
        tag: latest
        username: $$DOCKER_USERNAME
        password: $$DOCKER_PASSWORD
        email: $$DOCKER_EMAIL
        storage_driver: overlay

deploy:
        webhook:
            image: plugins/drone-webhook
            skip_verify: true
            method: DELETE
            auth:
                username: $$MANTL_USERNAME
                password: $$MANTL_PASSWORD
            urls:
                - https://$$MANTL_CONTROL/v2/apps/class/$$DOCKER_USERNAME
            content_type: application/json

deploy:
    webhook:
        image: plugins/drone-webhook
        skip_verify: true
        method: POST
        auth:
            username: $$MANTL_USERNAME
            password: $$MANTL_PASSWORD
        urls:
                - https://$$MANTL_CONTROL/v2/apps
        content_type: application/json
        template: '{"container": {"type": "DOCKER","docker": {"image": "$$DOCKER_USERNAME/cicd_demoapp:latest","forcePullImage": true,"network": "BRIDGE","portMappings": [{"containerPort": 80,"hostPort": 0}]},"forcePullImage": true},"healthChecks": [{"protocol": "TCP","portIndex": 0}],"id": "/class/$$DOCKER_USERNAME","instances": 1,"cpus": 0.1,"mem": 16,"env": {}}'

notify:
    spark:
        image: hpreston/drone-spark
        auth_token: $$SPARK_TOKEN
        roomId: $$SPARK_ROOM 
